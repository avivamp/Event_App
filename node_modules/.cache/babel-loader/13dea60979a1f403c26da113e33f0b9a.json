{"ast":null,"code":"/*global XDomainRequest:false */\nvar TraceKit = require('../vendor/TraceKit/tracekit');\n\nvar stringify = require('../vendor/json-stringify-safe/stringify');\n\nvar md5 = require('../vendor/md5/md5');\n\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\n\nvar isErrorEvent = utils.isErrorEvent;\nvar isDOMError = utils.isDOMError;\nvar isDOMException = utils.isDOMException;\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isPlainObject = utils.isPlainObject;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\nvar supportsReferrerPolicy = utils.supportsReferrerPolicy;\nvar serializeKeysForMessage = utils.serializeKeysForMessage;\nvar serializeException = utils.serializeException;\nvar sanitize = utils.sanitize;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n    dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n} // This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\n\n\nvar _window = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback) ? function (data) {\n    return callback(data, original);\n  } : callback;\n} // First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\n\n\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify); // Raven can run in contexts where there's no document (react-native)\n\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin\n    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    captureUnhandledRejections: true,\n    maxMessageLength: 0,\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1,\n    sanitizeKeys: []\n  };\n  this._fetchDefaults = {\n    method: 'POST',\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit; // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n\n  this._resetBackoff(); // eslint-disable-next-line guard-for-in\n\n\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.27.2',\n  debug: false,\n  TraceKit: TraceKit,\n  // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function (dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n\n      return self;\n    }\n\n    if (!dsn) return self;\n    var globalOptions = self._globalOptions; // merge in options\n\n    if (options) {\n      each(options, function (key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn); // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/); // join regexp rules into one big rule\n\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length ? joinRegExp(globalOptions.ignoreUrls) : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length ? joinRegExp(globalOptions.whitelistUrls) : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(0, Math.min(globalOptions.maxBreadcrumbs || 100, 100)); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n    var instrument = globalOptions.instrument;\n\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n\n    globalOptions.instrument = instrument;\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors; // return for chaining\n\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function () {\n    var self = this;\n\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function () {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      if (self._globalOptions.captureUnhandledRejections) {\n        self._attachPromiseRejectionHandler();\n      }\n\n      self._patchFunctionToString();\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs(); // Install all of the plugins\n\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function (dsn) {\n    var self = this,\n        uri = self._parseDSN(dsn),\n        lastSlash = uri.path.lastIndexOf('/'),\n        path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n    self._globalServer = self._getGlobalServer(uri);\n    self._globalEndpoint = self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/'; // Reset backoff state since we may be pointing at a\n    // new project/server\n\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function (options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = {};\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} _before A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function (options, func, _before) {\n    var self = this; // 1 argument has been passed, and it's not a function\n    // so just return it\n\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    } // options is optional\n\n\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    } // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n\n\n    if (!isFunction(func)) {\n      return func;\n    } // We don't wanna wrap it twice!\n\n\n    try {\n      if (func.__raven__) {\n        return func;\n      } // If this has already been wrapped in the past, return that\n\n\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n          i = arguments.length,\n          deep = !options || options && options.deep !== false;\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      } // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n\n\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n\n        self.captureException(e, options);\n        throw e;\n      }\n    } // copy over properties of the old function\n\n\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n\n    wrapped.prototype = func.prototype;\n    func.__raven_wrapper__ = wrapped; // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n    return wrapped;\n  },\n\n  /**\n   * Uninstalls the global error handler.\n   *\n   * @return {Raven}\n   */\n  uninstall: function () {\n    TraceKit.report.uninstall();\n\n    this._detachPromiseRejectionHandler();\n\n    this._unpatchFunctionToString();\n\n    this._restoreBuiltIns();\n\n    this._restoreConsole();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n    return this;\n  },\n\n  /**\n   * Callback used for `unhandledrejection` event\n   *\n   * @param {PromiseRejectionEvent} event An object containing\n   *   promise: the Promise that was rejected\n   *   reason: the value with which the Promise was rejected\n   * @return void\n   */\n  _promiseRejectionHandler: function (event) {\n    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);\n\n    this.captureException(event.reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false\n      }\n    });\n  },\n\n  /**\n   * Installs the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _attachPromiseRejectionHandler: function () {\n    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);\n    _window.addEventListener && _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Uninstalls the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _detachPromiseRejectionHandler: function () {\n    _window.removeEventListener && _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Manually capture an exception and send it over to Sentry\n   *\n   * @param {error} ex An exception to be logged\n   * @param {object} options A specific set of options for this error [optional]\n   * @return {Raven}\n   */\n  captureException: function (ex, options) {\n    options = objectMerge({\n      trimHeadFrames: 0\n    }, options ? options : {});\n\n    if (isErrorEvent(ex) && ex.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      ex = ex.error;\n    } else if (isDOMError(ex) || isDOMException(ex)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');\n      var message = ex.message ? name + ': ' + ex.message : name;\n      return this.captureMessage(message, objectMerge(options, {\n        // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well\n        // but it's barely any overhead so we may at least try\n        stacktrace: true,\n        trimHeadFrames: options.trimHeadFrames + 1\n      }));\n    } else if (isError(ex)) {\n      // we have a real Error object\n      ex = ex;\n    } else if (isPlainObject(ex)) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);\n      ex = new Error(options.message);\n    } else {\n      // If none of previous checks were valid, then it means that\n      // it's not a DOMError/DOMException\n      // it's not a plain Object\n      // it's not a valid ErrorEvent (one with an error property)\n      // it's not an Error\n      // So bail out and capture it as a simple message:\n      return this.captureMessage(ex, objectMerge(options, {\n        stacktrace: true,\n        // if we fall back to captureMessage, default to attempting a new trace\n        trimHeadFrames: options.trimHeadFrames + 1\n      }));\n    } // Store the raw exception object for potential debugging and introspection\n\n\n    this._lastCapturedException = ex; // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n  _getCaptureExceptionOptionsFromPlainObject: function (currentOptions, ex) {\n    var exKeys = Object.keys(ex).sort();\n    var options = objectMerge(currentOptions, {\n      message: 'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),\n      fingerprint: [md5(exKeys)],\n      extra: currentOptions.extra || {}\n    });\n    options.extra.__serialized__ = serializeException(ex);\n    return options;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function (msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n      return;\n    }\n\n    options = options || {};\n    msg = msg + ''; // Make sure it's actually a string\n\n    var data = objectMerge({\n      message: msg\n    }, options);\n    var ex; // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    } // null exception name so `Error` isn't prefixed to msg\n\n\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex); // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n\n    var initialCall = isArray(stack.stack) && stack.stack[1]; // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call\n    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd\n    // initialCall => captureException(string) => captureMessage(string)\n\n    if (initialCall && initialCall.func === 'Raven.captureException') {\n      initialCall = stack.stack[2];\n    }\n\n    var fileurl = initialCall && initialCall.url || '';\n\n    if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) {\n      return;\n    }\n\n    if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) {\n      return;\n    } // Always attempt to get stacktrace if message is empty.\n    // It's the only way to provide any helpful information to the user.\n\n\n    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {\n      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)\n      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;\n      options = objectMerge({\n        trimHeadFrames: 0\n      }, options); // Since we know this is a synthetic trace, the top frame (this function call)\n      // MUST be from Raven.js, so mark it for trimming\n      // We add to the trim counter so that callers can choose to trim extra frames, such\n      // as utility functions.\n\n      options.trimHeadFrames += 1;\n\n      var frames = this._prepareFrames(stack, options);\n\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    } // Make sure that fingerprint is always wrapped in an array\n\n\n    if (data.fingerprint) {\n      data.fingerprint = isArray(data.fingerprint) ? data.fingerprint : [data.fingerprint];\n    } // Fire away!\n\n\n    this._send(data);\n\n    return this;\n  },\n  captureBreadcrumb: function (obj) {\n    var crumb = objectMerge({\n      timestamp: now() / 1000\n    }, obj);\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n\n    return this;\n  },\n  addPlugin: function (plugin\n  /*arg1, arg2, ... argN*/\n  ) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function (user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function (extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function (tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function () {\n    this._globalContext = {};\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function () {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function (environment) {\n    this._globalOptions.environment = environment;\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function (release) {\n    this._globalOptions.release = release;\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function (callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function (callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function (callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function (transport) {\n    this._globalOptions.transport = transport;\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function () {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function () {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function () {\n    if (!this._hasJSON) return false; // needs JSON support\n\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n\n      return false;\n    }\n\n    return true;\n  },\n  afterLoad: function () {\n    // TODO: remove window dependence?\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n  showReportDialog: function (options) {\n    if (!_document // doesn't work without a document (React native)\n    ) return;\n    options = objectMerge({\n      eventId: this.lastEventId(),\n      dsn: this._dsn,\n      user: this._globalContext.user || {}\n    }, options);\n\n    if (!options.eventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    if (!options.dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var encodedOptions = [];\n\n    for (var key in options) {\n      if (key === 'user') {\n        var user = options.user;\n        if (user.name) encodedOptions.push('name=' + encode(user.name));\n        if (user.email) encodedOptions.push('email=' + encode(user.email));\n      } else {\n        encodedOptions.push(encode(key) + '=' + encode(options[key]));\n      }\n    }\n\n    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));\n\n    var script = _document.createElement('script');\n\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');\n\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function () {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function () {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n  _triggerEvent: function (eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n    if (!this._hasDocument) return;\n    options = options || {};\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options) if (hasKey(options, key)) {\n      evt[key] = options[key];\n    }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {// Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function (evtName) {\n    var self = this;\n    return function (evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null; // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n\n      if (self._lastCapturedEvent === evt) return;\n      self._lastCapturedEvent = evt; // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n\n      var target;\n\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName,\n        // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function () {\n    var self = this,\n        debounceDuration = 1000; // milliseconds\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n\n    return function (evt) {\n      var target;\n\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n\n      var tagName = target && target.tagName; // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n\n      if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable) return; // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n\n      var timeout = self._keypressTimeout;\n\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function () {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function (from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from); // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n\n    this._lastHref = to; // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) from = parsedFrom.relative;\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n  _patchFunctionToString: function () {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString; // eslint-disable-next-line no-extend-native\n\n    Function.prototype.toString = function () {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n  _unpatchFunctionToString: function () {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function () {\n    var self = this;\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function (fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n\n        var originalCallback = args[0];\n\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap({\n            mechanism: {\n              type: 'instrument',\n              data: {\n                function: orig.name || '<anonymous>'\n              }\n            }\n          }, originalCallback);\n        } // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n\n\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(proto, 'addEventListener', function (orig) {\n          return function (evtName, fn, capture, secure) {\n            // preserve arity\n            try {\n              if (fn && fn.handleEvent) {\n                fn.handleEvent = self.wrap({\n                  mechanism: {\n                    type: 'instrument',\n                    data: {\n                      target: global,\n                      function: 'handleEvent',\n                      handler: fn && fn.name || '<anonymous>'\n                    }\n                  }\n                }, fn.handleEvent);\n              }\n            } catch (err) {// can sometimes get 'Permission denied to access property \"handle Event'\n            } // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n            // so that we don't have more than one wrapper function\n\n\n            var before, clickHandler, keypressHandler;\n\n            if (autoBreadcrumbs && autoBreadcrumbs.dom && (global === 'EventTarget' || global === 'Node')) {\n              // NOTE: generating multiple handlers per addEventListener invocation, should\n              //       revisit and verify we can just use one (almost certainly)\n              clickHandler = self._breadcrumbEventHandler('click');\n              keypressHandler = self._keypressEventHandler();\n\n              before = function (evt) {\n                // need to intercept every DOM event in `before` argument, in case that\n                // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                // see #724\n                if (!evt) return;\n                var eventType;\n\n                try {\n                  eventType = evt.type;\n                } catch (e) {\n                  // just accessing event properties can throw an exception in some rare circumstances\n                  // see: https://github.com/getsentry/raven-js/issues/838\n                  return;\n                }\n\n                if (eventType === 'click') return clickHandler(evt);else if (eventType === 'keypress') return keypressHandler(evt);\n              };\n            }\n\n            return orig.call(this, evtName, self.wrap({\n              mechanism: {\n                type: 'instrument',\n                data: {\n                  target: global,\n                  function: 'addEventListener',\n                  handler: fn && fn.name || '<anonymous>'\n                }\n              }\n            }, fn, before), capture, secure);\n          };\n        }, wrappedBuiltIns);\n        fill(proto, 'removeEventListener', function (orig) {\n          return function (evt, fn, capture, secure) {\n            try {\n              fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n            } catch (e) {// ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n            }\n\n            return orig.call(this, evt, fn, capture, secure);\n          };\n        }, wrappedBuiltIns);\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n\n    if (_window.requestAnimationFrame) {\n      fill(_window, 'requestAnimationFrame', function (orig) {\n        return function (cb) {\n          return orig(self.wrap({\n            mechanism: {\n              type: 'instrument',\n              data: {\n                function: 'requestAnimationFrame',\n                handler: orig && orig.name || '<anonymous>'\n              }\n            }\n          }, cb));\n        };\n      }, wrappedBuiltIns);\n    } // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n\n\n    var eventTargets = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function () {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function (orig) {\n          return self.wrap({\n            mechanism: {\n              type: 'instrument',\n              data: {\n                function: prop,\n                handler: orig && orig.name || '<anonymous>'\n              }\n            }\n          }, orig);\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;\n      fill(xhrproto, 'open', function (origOpen) {\n        return function (method, url) {\n          // preserve arity\n          // if Sentry key appears in URL, don't capture\n          if (isString(url) && url.indexOf(self._globalKey) === -1) {\n            this.__raven_xhr = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n          }\n\n          return origOpen.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n      fill(xhrproto, 'send', function (origSend) {\n        return function () {\n          // preserve arity\n          var xhr = this;\n\n          function onreadystatechangeHandler() {\n            if (xhr.__raven_xhr && xhr.readyState === 4) {\n              try {\n                // touching statusCode in some platforms throws\n                // an exception\n                xhr.__raven_xhr.status_code = xhr.status;\n              } catch (e) {\n                /* do nothing */\n              }\n\n              self.captureBreadcrumb({\n                type: 'http',\n                category: 'xhr',\n                data: xhr.__raven_xhr\n              });\n            }\n          }\n\n          var props = ['onload', 'onerror', 'onprogress'];\n\n          for (var j = 0; j < props.length; j++) {\n            wrapProp(props[j], xhr);\n          }\n\n          if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n            fill(xhr, 'onreadystatechange', function (orig) {\n              return self.wrap({\n                mechanism: {\n                  type: 'instrument',\n                  data: {\n                    function: 'onreadystatechange',\n                    handler: orig && orig.name || '<anonymous>'\n                  }\n                }\n              }, orig, onreadystatechangeHandler);\n            }\n            /* intentionally don't track this instrumentation */\n            );\n          } else {\n            // if onreadystatechange wasn't actually set by the page on this xhr, we\n            // are free to set our own and capture the breadcrumb\n            xhr.onreadystatechange = onreadystatechangeHandler;\n          }\n\n          return origSend.apply(this, arguments);\n        };\n      }, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(_window, 'fetch', function (origFetch) {\n        return function () {\n          // preserve arity\n          // Make a copy of the arguments to prevent deoptimization\n          // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n          var args = new Array(arguments.length);\n\n          for (var i = 0; i < args.length; ++i) {\n            args[i] = arguments[i];\n          }\n\n          var fetchInput = args[0];\n          var method = 'GET';\n          var url;\n\n          if (typeof fetchInput === 'string') {\n            url = fetchInput;\n          } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n            url = fetchInput.url;\n\n            if (fetchInput.method) {\n              method = fetchInput.method;\n            }\n          } else {\n            url = '' + fetchInput;\n          } // if Sentry key appears in URL, don't capture, as it's our own request\n\n\n          if (url.indexOf(self._globalKey) !== -1) {\n            return origFetch.apply(this, args);\n          }\n\n          if (args[1] && args[1].method) {\n            method = args[1].method;\n          }\n\n          var fetchData = {\n            method: method,\n            url: url,\n            status_code: null\n          };\n          return origFetch.apply(this, args).then(function (response) {\n            fetchData.status_code = response.status;\n            self.captureBreadcrumb({\n              type: 'http',\n              category: 'fetch',\n              data: fetchData\n            });\n            return response;\n          })['catch'](function (err) {\n            // if there is an error performing the request\n            self.captureBreadcrumb({\n              type: 'http',\n              category: 'fetch',\n              data: fetchData,\n              level: 'error'\n            });\n            throw err;\n          });\n        };\n      }, wrappedBuiltIns);\n    } // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n\n\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else if (_document.attachEvent) {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    } // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n\n\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState = !isChromePackagedApp && _window.history && _window.history.pushState && _window.history.replaceState;\n\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n\n      _window.onpopstate = function () {\n        var currentHref = self._location.href;\n\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function (origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function ()\n        /* state, title, url */\n        {\n          var url = arguments.length > 2 ? arguments[2] : undefined; // url argument is optional\n\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function (msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function (_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n  _restoreBuiltIns: function () {\n    // restore any wrapped builtins\n    var builtin;\n\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n      var obj = builtin[0],\n          name = builtin[1],\n          orig = builtin[2];\n      obj[name] = orig;\n    }\n  },\n  _restoreConsole: function () {\n    // eslint-disable-next-line guard-for-in\n    for (var method in this._originalConsoleMethods) {\n      this._originalConsole[method] = this._originalConsoleMethods[method];\n    }\n  },\n  _drainPlugins: function () {\n    var self = this; // FIX ME TODO\n\n    each(this._plugins, function (_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n  _parseDSN: function (str) {\n    var m = dsnPattern.exec(str),\n        dsn = {},\n        i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n    }\n\n    return dsn;\n  },\n  _getGlobalServer: function (uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n\n    return globalServer;\n  },\n  _handleOnErrorStackInfo: function (stackInfo, options) {\n    options = options || {};\n    options.mechanism = options.mechanism || {\n      type: 'onerror',\n      handled: false\n    }; // if we are intentionally ignoring errors via onerror, bail out\n\n    if (!this._ignoreOnError) {\n      this._handleStackInfo(stackInfo, options);\n    }\n  },\n  _handleStackInfo: function (stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(stackInfo.name, stackInfo.message, stackInfo.url, stackInfo.lineno, frames, options);\n  },\n  _prepareFrames: function (stackInfo, options) {\n    var self = this;\n    var frames = [];\n\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function (i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n\n        if (frame) {\n          frames.push(frame);\n        }\n      }); // e.g. frames captured via captureMessage throw\n\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n  _normalizeFrame: function (frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    }; // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !( // determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) || // Now we check for fun, if the function name is Raven or TraceKit\n    /(Raven|TraceKit)\\./.test(normalized['function']) || // finally, we do a last ditch effort and check for raven.min.js\n    /raven\\.(min\\.)?js$/.test(normalized.filename));\n    return normalized;\n  },\n  _processException: function (type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n\n    if (!!this._globalOptions.ignoreErrors.test && (this._globalOptions.ignoreErrors.test(message) || this._globalOptions.ignoreErrors.test(prefixedMessage))) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl; // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n\n      frames.reverse();\n      stacktrace = {\n        frames: frames\n      };\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [{\n          filename: fileurl,\n          lineno: lineno,\n          in_app: true\n        }]\n      };\n    }\n\n    if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) {\n      return;\n    }\n\n    if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) {\n      return;\n    }\n\n    var data = objectMerge({\n      // sentry.interfaces.Exception\n      exception: {\n        values: [{\n          type: type,\n          value: message,\n          stacktrace: stacktrace\n        }]\n      },\n      transaction: fileurl\n    }, options);\n    var ex = data.exception.values[0];\n\n    if (ex.type == null && ex.value === '') {\n      ex.value = 'Unrecoverable error caught';\n    } // Move mechanism from options to exception interface\n    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be\n    // too much\n\n\n    if (!data.exception.mechanism && data.mechanism) {\n      data.exception.mechanism = data.mechanism;\n      delete data.mechanism;\n    }\n\n    data.exception.mechanism = objectMerge({\n      type: 'generic',\n      handled: true\n    }, data.exception.mechanism || {}); // Fire away!\n\n    this._send(data);\n  },\n  _trimPacket: function (data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values) this._trimBreadcrumbs(data.breadcrumbs);\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function (breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n        urlProp,\n        crumb,\n        data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (!crumb.hasOwnProperty('data') || !isObject(crumb.data) || objectFrozen(crumb.data)) continue;\n      data = objectMerge({}, crumb.data);\n\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n\n      breadcrumbs.values[i].data = data;\n    }\n  },\n  _getHttpData: function () {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': _navigator.userAgent\n      };\n    } // Check in `window` instead of `document`, as we may be in ServiceWorker environment\n\n\n    if (_window.location && _window.location.href) {\n      httpData.url = _window.location.href;\n    }\n\n    if (this._hasDocument && _document.referrer) {\n      if (!httpData.headers) httpData.headers = {};\n      httpData.headers.Referer = _document.referrer;\n    }\n\n    return httpData;\n  },\n  _resetBackoff: function () {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n  _shouldBackoff: function () {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function (current) {\n    var last = this._lastData;\n    if (!last || current.message !== last.message || // defined for captureMessage\n    current.transaction !== last.transaction // defined for captureException/onerror\n    ) return false; // Stacktrace interface (i.e. from captureMessage)\n\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    } else if (current.fingerprint || last.fingerprint) {\n      return Boolean(current.fingerprint && last.fingerprint) && JSON.stringify(current.fingerprint) === JSON.stringify(last.fingerprint);\n    }\n\n    return true;\n  },\n  _setBackoffState: function (request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status; // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n\n    if (!(status === 400 || status === 401 || status === 429)) return;\n    var retry;\n\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      } // Retry-After is returned in seconds\n\n\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry ? // If Sentry server returned a Retry-After value, use it\n    retry : // Otherwise, double the last backoff duration (starts at 1 sec)\n    this._backoffDuration * 2 || 1000;\n    this._backoffStart = now();\n  },\n  _send: function (data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n      project: this._globalProject,\n      logger: globalOptions.logger,\n      platform: 'javascript'\n    },\n        httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    } // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n\n\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n    data = objectMerge(baseData, data); // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra); // Send along our own collected metadata with extra\n\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    } // Include the environment if it's defined in globalOptions\n\n\n    if (globalOptions.environment) data.environment = globalOptions.environment; // Include the release if it's defined in globalOptions\n\n    if (globalOptions.release) data.release = globalOptions.release; // Include server_name if it's defined in globalOptions\n\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n    data = this._sanitizeData(data); // Cleanup empty properties before sending them to the server\n\n    Object.keys(data).forEach(function (key) {\n      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {\n        delete data[key];\n      }\n    });\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    } // Why??????????\n\n\n    if (!data || isEmptyObject(data)) {\n      return;\n    } // Check if the request should be filtered or not\n\n\n    if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n      return;\n    } // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n\n\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n  _sanitizeData: function (data) {\n    return sanitize(data, this._globalOptions.sanitizeKeys);\n  },\n  _getUuid: function () {\n    return uuid4();\n  },\n  _sendProcessedPayload: function (data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n    if (!this.isSetup()) return; // Try and clean up the packet before sending by truncating long values\n\n    data = this._trimPacket(data); // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n\n      return;\n    } // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n\n\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid()); // Store outbound payload after trim\n\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0]; // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n\n    if (this._globalOptions.autoBreadcrumbs && this._globalOptions.autoBreadcrumbs.sentry) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception ? (exception.type ? exception.type + ': ' : '') + exception.value : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n\n      });\n    }\n\n    var url = this._globalEndpoint;\n\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n  _makeRequest: function (opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n    var evaluatedHeaders = null;\n    var evaluatedFetchParameters = {};\n\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHash(opts.options.headers);\n    }\n\n    if (opts.options.fetchParameters) {\n      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);\n    }\n\n    if (supportsFetch()) {\n      evaluatedFetchParameters.body = stringify(opts.data);\n      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);\n      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);\n\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n\n      return _window.fetch(url, fetchOptions).then(function (response) {\n        if (response.ok) {\n          opts.onSuccess && opts.onSuccess();\n        } else {\n          var error = new Error('Sentry error code: ' + response.status); // It's called request only to keep compatibility with XHR interface\n          // and not add more redundant checks in setBackoffState method\n\n          error.request = response;\n          opts.onError && opts.onError(error);\n        }\n      })['catch'](function () {\n        opts.onError && opts.onError(new Error('Sentry error code: network unavailable'));\n      });\n    }\n\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return; // if browser doesn't support CORS (e.g. IE7), we are out of luck\n\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n    if (!hasCORS) return;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest(); // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n\n      url = url.replace(/^https?:/, ''); // onreadystatechange not supported by XDomainRequest\n\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n\n      if (opts.onError) {\n        request.onerror = function () {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    request.open('POST', url);\n\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function (key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n\n    request.send(stringify(opts.data));\n  },\n  _evaluateHash: function (hash) {\n    var evaluated = {};\n\n    for (var key in hash) {\n      if (hash.hasOwnProperty(key)) {\n        var value = hash[key];\n        evaluated[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n\n    return evaluated;\n  },\n  _logDebug: function (level) {\n    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change\n    if (this._originalConsoleMethods[level] && (this.debug || this._globalOptions.debug)) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(this._originalConsoleMethods[level], this._originalConsole, [].slice.call(arguments, 1));\n    }\n  },\n  _mergeContext: function (key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n}; // Deprecations\n\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\nmodule.exports = Raven;","map":{"version":3,"sources":["/Users/avinashraut/Work/event-app/node_modules/raven-js/src/raven.js"],"names":["TraceKit","require","stringify","md5","RavenConfigError","utils","isErrorEvent","isDOMError","isDOMException","isError","isObject","isPlainObject","isUndefined","isFunction","isString","isArray","isEmptyObject","each","objectMerge","truncate","objectFrozen","hasKey","joinRegExp","urlencode","uuid4","htmlTreeAsString","isSameException","isSameStacktrace","parseUrl","fill","supportsFetch","supportsReferrerPolicy","serializeKeysForMessage","serializeException","sanitize","wrapConsoleMethod","wrapMethod","dsnKeys","split","dsnPattern","now","Date","_window","window","global","self","_document","document","_navigator","navigator","keepOriginalCallback","original","callback","data","Raven","_hasJSON","JSON","_hasDocument","_hasNavigator","_lastCapturedException","_lastData","_lastEventId","_globalServer","_globalKey","_globalProject","_globalContext","_globalOptions","release","SENTRY_RELEASE","id","logger","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","headers","collectWindowErrors","captureUnhandledRejections","maxMessageLength","maxUrlLength","stackTraceLimit","autoBreadcrumbs","instrument","sampleRate","sanitizeKeys","_fetchDefaults","method","referrerPolicy","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","Error","_originalConsole","console","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_lastCapturedEvent","_keypressTimeout","_location","location","_lastHref","href","_resetBackoff","prototype","VERSION","debug","config","dsn","options","_logDebug","globalOptions","key","value","setDSN","push","length","maxBreadcrumbs","Math","max","min","autoBreadcrumbDefaults","xhr","dom","sentry","toString","call","instrumentDefaults","tryCatch","install","isSetup","report","subscribe","_handleOnErrorStackInfo","apply","arguments","_attachPromiseRejectionHandler","_patchFunctionToString","_instrumentTryCatch","_instrumentBreadcrumbs","_drainPlugins","uri","_parseDSN","lastSlash","path","lastIndexOf","substr","_dsn","user","_globalSecret","pass","_getGlobalServer","_globalEndpoint","context","func","args","wrap","_before","undefined","__raven__","__raven_wrapper__","e","wrapped","i","deep","_ignoreNextOnError","captureException","property","__orig__","uninstall","_detachPromiseRejectionHandler","_unpatchFunctionToString","_restoreBuiltIns","_restoreConsole","_promiseRejectionHandler","event","reason","mechanism","type","handled","bind","addEventListener","removeEventListener","ex","trimHeadFrames","error","name","message","captureMessage","stacktrace","_getCaptureExceptionOptionsFromPlainObject","stack","computeStackTrace","_handleStackInfo","ex1","currentOptions","exKeys","Object","keys","sort","fingerprint","extra","__serialized__","msg","test","initialCall","fileurl","url","frames","_prepareFrames","reverse","_send","captureBreadcrumb","obj","crumb","timestamp","breadcrumbCallback","result","shift","addPlugin","plugin","pluginArgs","slice","setUserContext","setExtraContext","_mergeContext","setTagsContext","tags","clearContext","getContext","parse","setEnvironment","environment","setRelease","setDataCallback","dataCallback","setBreadcrumbCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastException","lastEventId","ravenNotConfiguredError","afterLoad","RavenConfig","showReportDialog","eventId","encode","encodeURIComponent","encodedOptions","email","globalServer","script","createElement","async","src","join","head","body","appendChild","setTimeout","_triggerEvent","eventType","evt","toUpperCase","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","toLowerCase","_breadcrumbEventHandler","evtName","target","category","_keypressEventHandler","debounceDuration","tagName","isContentEditable","timeout","clearTimeout","_captureUrlChange","from","to","parsedLoc","parsedTo","parsedFrom","protocol","host","relative","_originalFunctionToString","Function","wrappedBuiltIns","wrapTimeFn","orig","fn","t","Array","originalCallback","function","wrapEventTarget","proto","hasOwnProperty","capture","secure","handleEvent","handler","err","before","clickHandler","keypressHandler","requestAnimationFrame","cb","eventTargets","wrapProp","prop","xhrproto","XMLHttpRequest","origOpen","indexOf","__raven_xhr","status_code","origSend","onreadystatechangeHandler","readyState","status","props","j","onreadystatechange","origFetch","fetchInput","Request","fetchData","then","response","level","attachEvent","chrome","isChromePackagedApp","app","runtime","hasPushAndReplaceState","history","pushState","replaceState","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","origHistFunction","log","consoleMethodCallback","_","builtin","installer","concat","str","m","exec","allowSecretKey","port","stackInfo","_processException","lineno","frame","_normalizeFrame","in_app","stackInfoUrl","normalized","filename","line","colno","column","prefixedMessage","exception","values","transaction","_trimPacket","request","Referer","breadcrumbs","_trimBreadcrumbs","urlProps","urlProp","_getHttpData","httpData","userAgent","referrer","_backoffDuration","_backoffStart","_shouldBackoff","_isRepeatData","current","last","Boolean","_setBackoffState","retry","get","getResponseHeader","parseInt","baseData","project","platform","serverName","server_name","_sanitizeData","forEach","random","_sendProcessedPayload","_getUuid","allowDuplicates","event_id","auth","sentry_version","sentry_client","sentry_key","sentry_secret","_makeRequest","onSuccess","success","onError","failure","opts","evaluatedHeaders","evaluatedFetchParameters","_evaluateHash","fetchParameters","defaultFetchOptions","fetchOptions","fetch","ok","hasCORS","XDomainRequest","replace","onload","onerror","open","setRequestHeader","send","hash","evaluated","setUser","setReleaseContext","module","exports"],"mappings":"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","sourcesContent":["/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar md5 = require('../vendor/md5/md5');\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\nvar isErrorEvent = utils.isErrorEvent;\nvar isDOMError = utils.isDOMError;\nvar isDOMException = utils.isDOMException;\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isPlainObject = utils.isPlainObject;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\nvar supportsReferrerPolicy = utils.supportsReferrerPolicy;\nvar serializeKeysForMessage = utils.serializeKeysForMessage;\nvar serializeException = utils.serializeException;\nvar sanitize = utils.sanitize;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback)\n    ? function(data) {\n        return callback(data, original);\n      }\n    : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    // SENTRY_RELEASE can be injected by https://github.com/getsentry/sentry-webpack-plugin\n    release: _window.SENTRY_RELEASE && _window.SENTRY_RELEASE.id,\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    captureUnhandledRejections: true,\n    maxMessageLength: 0,\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1,\n    sanitizeKeys: []\n  };\n  this._fetchDefaults = {\n    method: 'POST',\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.27.2',\n\n  debug: false,\n\n  TraceKit: TraceKit, // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function(key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length\n      ? joinRegExp(globalOptions.ignoreUrls)\n      : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length\n      ? joinRegExp(globalOptions.whitelistUrls)\n      : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(\n      0,\n      Math.min(globalOptions.maxBreadcrumbs || 100, 100)\n    ); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function() {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function() {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      if (self._globalOptions.captureUnhandledRejections) {\n        self._attachPromiseRejectionHandler();\n      }\n\n      self._patchFunctionToString();\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function(dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n\n    self._globalServer = self._getGlobalServer(uri);\n\n    self._globalEndpoint =\n      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = {};\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} _before A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function(options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || (options && options.deep !== false);\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n\n    return wrapped;\n  },\n\n  /**\n   * Uninstalls the global error handler.\n   *\n   * @return {Raven}\n   */\n  uninstall: function() {\n    TraceKit.report.uninstall();\n\n    this._detachPromiseRejectionHandler();\n    this._unpatchFunctionToString();\n    this._restoreBuiltIns();\n    this._restoreConsole();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n\n    return this;\n  },\n\n  /**\n   * Callback used for `unhandledrejection` event\n   *\n   * @param {PromiseRejectionEvent} event An object containing\n   *   promise: the Promise that was rejected\n   *   reason: the value with which the Promise was rejected\n   * @return void\n   */\n  _promiseRejectionHandler: function(event) {\n    this._logDebug('debug', 'Raven caught unhandled promise rejection:', event);\n    this.captureException(event.reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false\n      }\n    });\n  },\n\n  /**\n   * Installs the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _attachPromiseRejectionHandler: function() {\n    this._promiseRejectionHandler = this._promiseRejectionHandler.bind(this);\n    _window.addEventListener &&\n      _window.addEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Uninstalls the global promise rejection handler.\n   *\n   * @return {raven}\n   */\n  _detachPromiseRejectionHandler: function() {\n    _window.removeEventListener &&\n      _window.removeEventListener('unhandledrejection', this._promiseRejectionHandler);\n    return this;\n  },\n\n  /**\n   * Manually capture an exception and send it over to Sentry\n   *\n   * @param {error} ex An exception to be logged\n   * @param {object} options A specific set of options for this error [optional]\n   * @return {Raven}\n   */\n  captureException: function(ex, options) {\n    options = objectMerge({trimHeadFrames: 0}, options ? options : {});\n\n    if (isErrorEvent(ex) && ex.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      ex = ex.error;\n    } else if (isDOMError(ex) || isDOMException(ex)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var name = ex.name || (isDOMError(ex) ? 'DOMError' : 'DOMException');\n      var message = ex.message ? name + ': ' + ex.message : name;\n\n      return this.captureMessage(\n        message,\n        objectMerge(options, {\n          // neither DOMError or DOMException provide stack trace and we most likely wont get it this way as well\n          // but it's barely any overhead so we may at least try\n          stacktrace: true,\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    } else if (isError(ex)) {\n      // we have a real Error object\n      ex = ex;\n    } else if (isPlainObject(ex)) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      options = this._getCaptureExceptionOptionsFromPlainObject(options, ex);\n      ex = new Error(options.message);\n    } else {\n      // If none of previous checks were valid, then it means that\n      // it's not a DOMError/DOMException\n      // it's not a plain Object\n      // it's not a valid ErrorEvent (one with an error property)\n      // it's not an Error\n      // So bail out and capture it as a simple message:\n      return this.captureMessage(\n        ex,\n        objectMerge(options, {\n          stacktrace: true, // if we fall back to captureMessage, default to attempting a new trace\n          trimHeadFrames: options.trimHeadFrames + 1\n        })\n      );\n    }\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  _getCaptureExceptionOptionsFromPlainObject: function(currentOptions, ex) {\n    var exKeys = Object.keys(ex).sort();\n    var options = objectMerge(currentOptions, {\n      message:\n        'Non-Error exception captured with keys: ' + serializeKeysForMessage(exKeys),\n      fingerprint: [md5(exKeys)],\n      extra: currentOptions.extra || {}\n    });\n    options.extra.__serialized__ = serializeException(ex);\n\n    return options;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      this._globalOptions.ignoreErrors.test(msg)\n    ) {\n      return;\n    }\n\n    options = options || {};\n    msg = msg + ''; // Make sure it's actually a string\n\n    var data = objectMerge(\n      {\n        message: msg\n      },\n      options\n    );\n\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = isArray(stack.stack) && stack.stack[1];\n\n    // if stack[1] is `Raven.captureException`, it means that someone passed a string to it and we redirected that call\n    // to be handled by `captureMessage`, thus `initialCall` is the 3rd one, not 2nd\n    // initialCall => captureException(string) => captureMessage(string)\n    if (initialCall && initialCall.func === 'Raven.captureException') {\n      initialCall = stack.stack[2];\n    }\n\n    var fileurl = (initialCall && initialCall.url) || '';\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    // Always attempt to get stacktrace if message is empty.\n    // It's the only way to provide any helpful information to the user.\n    if (this._globalOptions.stacktrace || options.stacktrace || data.message === '') {\n      // fingerprint on msg, not stack trace (legacy behavior, could be revisited)\n      data.fingerprint = data.fingerprint == null ? msg : data.fingerprint;\n\n      options = objectMerge(\n        {\n          trimHeadFrames: 0\n        },\n        options\n      );\n      // Since we know this is a synthetic trace, the top frame (this function call)\n      // MUST be from Raven.js, so mark it for trimming\n      // We add to the trim counter so that callers can choose to trim extra frames, such\n      // as utility functions.\n      options.trimHeadFrames += 1;\n\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Make sure that fingerprint is always wrapped in an array\n    if (data.fingerprint) {\n      data.fingerprint = isArray(data.fingerprint)\n        ? data.fingerprint\n        : [data.fingerprint];\n    }\n\n    // Fire away!\n    this._send(data);\n\n    return this;\n  },\n\n  captureBreadcrumb: function(obj) {\n    var crumb = objectMerge(\n      {\n        timestamp: now() / 1000\n      },\n      obj\n    );\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n\n  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function() {\n    this._globalContext = {};\n\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function(environment) {\n    this._globalOptions.environment = environment;\n\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function(release) {\n    this._globalOptions.release = release;\n\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function(transport) {\n    this._globalOptions.transport = transport;\n\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function() {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function() {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function() {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n\n  afterLoad: function() {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n\n  showReportDialog: function(options) {\n    if (\n      !_document // doesn't work without a document (React native)\n    )\n      return;\n\n    options = objectMerge(\n      {\n        eventId: this.lastEventId(),\n        dsn: this._dsn,\n        user: this._globalContext.user || {}\n      },\n      options\n    );\n\n    if (!options.eventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    if (!options.dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var encodedOptions = [];\n\n    for (var key in options) {\n      if (key === 'user') {\n        var user = options.user;\n        if (user.name) encodedOptions.push('name=' + encode(user.name));\n        if (user.email) encodedOptions.push('email=' + encode(user.email));\n      } else {\n        encodedOptions.push(encode(key) + '=' + encode(options[key]));\n      }\n    }\n    var globalServer = this._getGlobalServer(this._parseDSN(options.dsn));\n\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/?' + encodedOptions.join('&');\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function() {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n\n  _triggerEvent: function(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n\n    if (!this._hasDocument) return;\n\n    options = options || {};\n\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options)\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function(evtName) {\n    var self = this;\n    return function(evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName, // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function() {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function(evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (\n        !tagName ||\n        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n      )\n        return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function() {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n      to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n      from = parsedFrom.relative;\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  _patchFunctionToString: function() {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString;\n    // eslint-disable-next-line no-extend-native\n    Function.prototype.toString = function() {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n\n  _unpatchFunctionToString: function() {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function() {\n    var self = this;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function(fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: orig.name || '<anonymous>'}\n              }\n            },\n            originalCallback\n          );\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(\n          proto,\n          'addEventListener',\n          function(orig) {\n            return function(evtName, fn, capture, secure) {\n              // preserve arity\n              try {\n                if (fn && fn.handleEvent) {\n                  fn.handleEvent = self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          target: global,\n                          function: 'handleEvent',\n                          handler: (fn && fn.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    fn.handleEvent\n                  );\n                }\n              } catch (err) {\n                // can sometimes get 'Permission denied to access property \"handle Event'\n              }\n\n              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n              // so that we don't have more than one wrapper function\n              var before, clickHandler, keypressHandler;\n\n              if (\n                autoBreadcrumbs &&\n                autoBreadcrumbs.dom &&\n                (global === 'EventTarget' || global === 'Node')\n              ) {\n                // NOTE: generating multiple handlers per addEventListener invocation, should\n                //       revisit and verify we can just use one (almost certainly)\n                clickHandler = self._breadcrumbEventHandler('click');\n                keypressHandler = self._keypressEventHandler();\n                before = function(evt) {\n                  // need to intercept every DOM event in `before` argument, in case that\n                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                  // see #724\n                  if (!evt) return;\n\n                  var eventType;\n                  try {\n                    eventType = evt.type;\n                  } catch (e) {\n                    // just accessing event properties can throw an exception in some rare circumstances\n                    // see: https://github.com/getsentry/raven-js/issues/838\n                    return;\n                  }\n                  if (eventType === 'click') return clickHandler(evt);\n                  else if (eventType === 'keypress') return keypressHandler(evt);\n                };\n              }\n              return orig.call(\n                this,\n                evtName,\n                self.wrap(\n                  {\n                    mechanism: {\n                      type: 'instrument',\n                      data: {\n                        target: global,\n                        function: 'addEventListener',\n                        handler: (fn && fn.name) || '<anonymous>'\n                      }\n                    }\n                  },\n                  fn,\n                  before\n                ),\n                capture,\n                secure\n              );\n            };\n          },\n          wrappedBuiltIns\n        );\n        fill(\n          proto,\n          'removeEventListener',\n          function(orig) {\n            return function(evt, fn, capture, secure) {\n              try {\n                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n              } catch (e) {\n                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n              }\n              return orig.call(this, evt, fn, capture, secure);\n            };\n          },\n          wrappedBuiltIns\n        );\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(\n        _window,\n        'requestAnimationFrame',\n        function(orig) {\n          return function(cb) {\n            return orig(\n              self.wrap(\n                {\n                  mechanism: {\n                    type: 'instrument',\n                    data: {\n                      function: 'requestAnimationFrame',\n                      handler: (orig && orig.name) || '<anonymous>'\n                    }\n                  }\n                },\n                cb\n              )\n            );\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload'\n    ];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function(orig) {\n          return self.wrap(\n            {\n              mechanism: {\n                type: 'instrument',\n                data: {function: prop, handler: (orig && orig.name) || '<anonymous>'}\n              }\n            },\n            orig\n          );\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = _window.XMLHttpRequest && _window.XMLHttpRequest.prototype;\n      fill(\n        xhrproto,\n        'open',\n        function(origOpen) {\n          return function(method, url) {\n            // preserve arity\n\n            // if Sentry key appears in URL, don't capture\n            if (isString(url) && url.indexOf(self._globalKey) === -1) {\n              this.__raven_xhr = {\n                method: method,\n                url: url,\n                status_code: null\n              };\n            }\n\n            return origOpen.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n\n      fill(\n        xhrproto,\n        'send',\n        function(origSend) {\n          return function() {\n            // preserve arity\n            var xhr = this;\n\n            function onreadystatechangeHandler() {\n              if (xhr.__raven_xhr && xhr.readyState === 4) {\n                try {\n                  // touching statusCode in some platforms throws\n                  // an exception\n                  xhr.__raven_xhr.status_code = xhr.status;\n                } catch (e) {\n                  /* do nothing */\n                }\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'xhr',\n                  data: xhr.__raven_xhr\n                });\n              }\n            }\n\n            var props = ['onload', 'onerror', 'onprogress'];\n            for (var j = 0; j < props.length; j++) {\n              wrapProp(props[j], xhr);\n            }\n\n            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n              fill(\n                xhr,\n                'onreadystatechange',\n                function(orig) {\n                  return self.wrap(\n                    {\n                      mechanism: {\n                        type: 'instrument',\n                        data: {\n                          function: 'onreadystatechange',\n                          handler: (orig && orig.name) || '<anonymous>'\n                        }\n                      }\n                    },\n                    orig,\n                    onreadystatechangeHandler\n                  );\n                } /* intentionally don't track this instrumentation */\n              );\n            } else {\n              // if onreadystatechange wasn't actually set by the page on this xhr, we\n              // are free to set our own and capture the breadcrumb\n              xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n\n            return origSend.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(\n        _window,\n        'fetch',\n        function(origFetch) {\n          return function() {\n            // preserve arity\n            // Make a copy of the arguments to prevent deoptimization\n            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n            var args = new Array(arguments.length);\n            for (var i = 0; i < args.length; ++i) {\n              args[i] = arguments[i];\n            }\n\n            var fetchInput = args[0];\n            var method = 'GET';\n            var url;\n\n            if (typeof fetchInput === 'string') {\n              url = fetchInput;\n            } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n              url = fetchInput.url;\n              if (fetchInput.method) {\n                method = fetchInput.method;\n              }\n            } else {\n              url = '' + fetchInput;\n            }\n\n            // if Sentry key appears in URL, don't capture, as it's our own request\n            if (url.indexOf(self._globalKey) !== -1) {\n              return origFetch.apply(this, args);\n            }\n\n            if (args[1] && args[1].method) {\n              method = args[1].method;\n            }\n\n            var fetchData = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n\n            return origFetch\n              .apply(this, args)\n              .then(function(response) {\n                fetchData.status_code = response.status;\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData\n                });\n\n                return response;\n              })\n              ['catch'](function(err) {\n                // if there is an error performing the request\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'fetch',\n                  data: fetchData,\n                  level: 'error'\n                });\n\n                throw err;\n              });\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else if (_document.attachEvent) {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState =\n      !isChromePackagedApp &&\n      _window.history &&\n      _window.history.pushState &&\n      _window.history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function() {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function(origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function(/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(_window.history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(_window.history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n\n  _restoreBuiltIns: function() {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n\n      obj[name] = orig;\n    }\n  },\n\n  _restoreConsole: function() {\n    // eslint-disable-next-line guard-for-in\n    for (var method in this._originalConsoleMethods) {\n      this._originalConsole[method] = this._originalConsoleMethods[method];\n    }\n  },\n\n  _drainPlugins: function() {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function(_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n\n  _parseDSN: function(str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError(\n        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'\n      );\n    }\n\n    return dsn;\n  },\n\n  _getGlobalServer: function(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n\n  _handleOnErrorStackInfo: function(stackInfo, options) {\n    options = options || {};\n    options.mechanism = options.mechanism || {\n      type: 'onerror',\n      handled: false\n    };\n\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo(stackInfo, options);\n    }\n  },\n\n  _handleStackInfo: function(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(\n      stackInfo.name,\n      stackInfo.message,\n      stackInfo.url,\n      stackInfo.lineno,\n      frames,\n      options\n    );\n  },\n\n  _prepareFrames: function(stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function(i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n\n  _normalizeFrame: function(frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !// determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    (\n      (!!this._globalOptions.includePaths.test &&\n        !this._globalOptions.includePaths.test(normalized.filename)) ||\n      // Now we check for fun, if the function name is Raven or TraceKit\n      /(Raven|TraceKit)\\./.test(normalized['function']) ||\n      // finally, we do a last ditch effort and check for raven.min.js\n      /raven\\.(min\\.)?js$/.test(normalized.filename)\n    );\n\n    return normalized;\n  },\n\n  _processException: function(type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      (this._globalOptions.ignoreErrors.test(message) ||\n        this._globalOptions.ignoreErrors.test(prefixedMessage))\n    ) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {frames: frames};\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [\n          {\n            filename: fileurl,\n            lineno: lineno,\n            in_app: true\n          }\n        ]\n      };\n    }\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    var data = objectMerge(\n      {\n        // sentry.interfaces.Exception\n        exception: {\n          values: [\n            {\n              type: type,\n              value: message,\n              stacktrace: stacktrace\n            }\n          ]\n        },\n        transaction: fileurl\n      },\n      options\n    );\n\n    var ex = data.exception.values[0];\n    if (ex.type == null && ex.value === '') {\n      ex.value = 'Unrecoverable error caught';\n    }\n\n    // Move mechanism from options to exception interface\n    // We do this, as requiring user to pass `{exception:{mechanism:{ ... }}}` would be\n    // too much\n    if (!data.exception.mechanism && data.mechanism) {\n      data.exception.mechanism = data.mechanism;\n      delete data.mechanism;\n    }\n\n    data.exception.mechanism = objectMerge(\n      {\n        type: 'generic',\n        handled: true\n      },\n      data.exception.mechanism || {}\n    );\n\n    // Fire away!\n    this._send(data);\n  },\n\n  _trimPacket: function(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values)\n      this._trimBreadcrumbs(data.breadcrumbs);\n\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (\n        !crumb.hasOwnProperty('data') ||\n        !isObject(crumb.data) ||\n        objectFrozen(crumb.data)\n      )\n        continue;\n\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n\n  _getHttpData: function() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': _navigator.userAgent\n      };\n    }\n\n    // Check in `window` instead of `document`, as we may be in ServiceWorker environment\n    if (_window.location && _window.location.href) {\n      httpData.url = _window.location.href;\n    }\n\n    if (this._hasDocument && _document.referrer) {\n      if (!httpData.headers) httpData.headers = {};\n      httpData.headers.Referer = _document.referrer;\n    }\n\n    return httpData;\n  },\n\n  _resetBackoff: function() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n\n  _shouldBackoff: function() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function(current) {\n    var last = this._lastData;\n\n    if (\n      !last ||\n      current.message !== last.message || // defined for captureMessage\n      current.transaction !== last.transaction // defined for captureException/onerror\n    )\n      return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    } else if (current.fingerprint || last.fingerprint) {\n      return Boolean(current.fingerprint && last.fingerprint) &&\n        JSON.stringify(current.fingerprint) === JSON.stringify(last.fingerprint)\n    }\n\n    return true;\n  },\n\n  _setBackoffState: function(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      }\n\n      // Retry-After is returned in seconds\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry\n      ? // If Sentry server returned a Retry-After value, use it\n        retry\n      : // Otherwise, double the last backoff duration (starts at 1 sec)\n        this._backoffDuration * 2 || 1000;\n\n    this._backoffStart = now();\n  },\n\n  _send: function(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    data = this._sanitizeData(data);\n\n    // Cleanup empty properties before sending them to the server\n    Object.keys(data).forEach(function(key) {\n      if (data[key] == null || data[key] === '' || isEmptyObject(data[key])) {\n        delete data[key];\n      }\n    });\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (\n      isFunction(globalOptions.shouldSendCallback) &&\n      !globalOptions.shouldSendCallback(data)\n    ) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n\n  _sanitizeData: function(data) {\n    return sanitize(data, this._globalOptions.sanitizeKeys);\n  },\n\n  _getUuid: function() {\n    return uuid4();\n  },\n\n  _sendProcessedPayload: function(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n\n    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n    if (\n      this._globalOptions.autoBreadcrumbs &&\n      this._globalOptions.autoBreadcrumbs.sentry\n    ) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception\n          ? (exception.type ? exception.type + ': ' : '') + exception.value\n          : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n      });\n    }\n\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n\n  _makeRequest: function(opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n\n    var evaluatedHeaders = null;\n    var evaluatedFetchParameters = {};\n\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHash(opts.options.headers);\n    }\n\n    if (opts.options.fetchParameters) {\n      evaluatedFetchParameters = this._evaluateHash(opts.options.fetchParameters);\n    }\n\n    if (supportsFetch()) {\n      evaluatedFetchParameters.body = stringify(opts.data);\n\n      var defaultFetchOptions = objectMerge({}, this._fetchDefaults);\n      var fetchOptions = objectMerge(defaultFetchOptions, evaluatedFetchParameters);\n\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n\n      return _window\n        .fetch(url, fetchOptions)\n        .then(function(response) {\n          if (response.ok) {\n            opts.onSuccess && opts.onSuccess();\n          } else {\n            var error = new Error('Sentry error code: ' + response.status);\n            // It's called request only to keep compatibility with XHR interface\n            // and not add more redundant checks in setBackoffState method\n            error.request = response;\n            opts.onError && opts.onError(error);\n          }\n        })\n        ['catch'](function() {\n          opts.onError &&\n            opts.onError(new Error('Sentry error code: network unavailable'));\n        });\n    }\n\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n\n    if (!hasCORS) return;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function() {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function() {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    request.open('POST', url);\n\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function(key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n\n    request.send(stringify(opts.data));\n  },\n\n  _evaluateHash: function(hash) {\n    var evaluated = {};\n\n    for (var key in hash) {\n      if (hash.hasOwnProperty(key)) {\n        var value = hash[key];\n        evaluated[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n\n    return evaluated;\n  },\n\n  _logDebug: function(level) {\n    // We allow `Raven.debug` and `Raven.config(DSN, { debug: true })` to not make backward incompatible API change\n    if (\n      this._originalConsoleMethods[level] &&\n      (this.debug || this._globalOptions.debug)\n    ) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(\n        this._originalConsoleMethods[level],\n        this._originalConsole,\n        [].slice.call(arguments, 1)\n      );\n    }\n  },\n\n  _mergeContext: function(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n"]},"metadata":{},"sourceType":"script"}